//import se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask

plugins {
    id 'java'
    id 'maven-publish'
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id 'fabric-loom' version '0.12-SNAPSHOT'
    //id "se.bjurr.gitchangelog.git-changelog-gradle-plugin" version "1.64"
}

def isReleaseBranch = System.getenv("BRANCH") == "release-1.15" || System.getenv("BRANCH") == "release-1.16" || System.getenv("BRANCH") == "release-1.17";


group = "com.buuz135"
archivesBaseName = "industrial-foregoing"
version = "${minecraft_version}-${project.api_version}"
if (System.getenv('BUILD_NUMBER') != null) {
    version += "-" + System.getenv('BUILD_NUMBER')
}

loom {
    accessWidenerPath = file("src/main/resources/industrial-foregoing.accesswidener")
    runs {
        datagen {
            server()

            name = "Data Generation"
            runDir = "build/datagen"

            vmArg("-Dfabric-api.datagen")
            vmArg("-Dfabric-api.datagen.output-dir=${file("src/main/generated")}")
        }
    }
}
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

// Include resources generated by data generators.
//sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        url "https://maven.tterrag.com/"
    }
    maven {
        name 'jared maven'
        url "https://maven.blamejared.com/"
    }
    maven {
        url 'https://www.dogforce-games.com/maven/'
    }
    maven {
        url = "https://www.cursemaven.com"
    }
    maven { url = "https://api.modrinth.com/maven" }
    maven { url "https://maven.theillusivec4.top/" }
    maven { url "https://maven.saps.dev/minecraft/"}
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven { url "https://maven.shedaniel.me/" }
    maven {
        url "https://maven.architectury.dev/"
    }
    maven {
        url = uri("https://storage.googleapis.com/devan-maven/")
    }
    maven {
        url "https://maven.terraformersmc.com"
        content {
            includeGroup "com.terraformersmc"
        }
    }
    maven {
        name = "Cafeteria Development"
        url = 'https://maven.cafeteria.dev/releases'
        content {
            includeGroup 'dev.cafeteria'
        }
    }
    maven {
        name = "Fuzs Mod Resources"
        url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
    }
    maven {
        url "https://repo.repsy.io/mvn/distant/feltmc"
    }
    maven { url = "https://mvn.devos.one/snapshots/" }
    maven { url 'https://jitpack.io' }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${project.minecraft_version}:${project.mappings_version}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation('com.github.Refabricated-Mods:Titanium:573ed527ed'){
        exclude(group: "net.fabricmc")
    }

    modCompileOnly("mezz.jei:jei-${project.minecraft_version}-fabric-api:10.1.0.223")

    //compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_mc_version}-${curios_version}:api")
    //runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_mc_version}-${curios_version}")
    //runtimeOnly fg.deobf("curse.maven:immersive-engineering-231951:3755665")

    // compiled from github
    //compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.17.1-56-SNAPSHOT:api")
    //runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.17.1-56-SNAPSHOT")
    modImplementation(include("com.github.Trinsdar.Felt-API:felt-item-api:038244ff5b"))
    modApi("me.shedaniel.cloth:cloth-config-fabric:6.4.90") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modImplementation(include("io.github.tropheusj:milk-lib:0.3.2"))
    modImplementation(include("dev.cafeteria:fake-player-api:${project.fakeplayerapi_version}"))
    //modImplementation("curse.maven:continuity-531351:3927269")
    modImplementation("curse.maven:ctm-refabricated-633997:3834064")
}

/*afterEvaluate {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xmaxerrs" << "2000"
    }
}*/

processResources {
    //dependsOn copyAccessWidener

    def toReplace = [
            "version"             : project.version
    ]

    inputs.properties toReplace
    filesMatching("fabric.mod.json") {
        expand toReplace
    }
}

task apiJar(type: Jar, dependsOn: 'classes') {
    classifier = 'api'
    from(sourceSets.main.output) {
        include 'com/buuz135/industrial/api/**'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task deobfJar(type:Jar) {
    from sourceSets.main.output
    classifier 'deobf'
}

artifacts {
    archives sourcesJar
    archives deobfJar
    archives apiJar
}

publish.dependsOn(project.tasks.getByName("assemble"))
publish.mustRunAfter(project.tasks.getByName("build"))

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact sourcesJar
            artifact deobfJar
            artifact apiJar
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}

tasks.curseforge.enabled = System.env["CURSE_API"] != null

curseforge {
    if (System.env["CURSE_API"] != null){
        apiKey = System.env["CURSE_API"]
    }
    project {
        id = '266515'
        changelog = "https://github.com/InnovativeOnlineIndustries/Industrial-Foregoing/blob/changelog/CHANGELOG.md"
        changelogType = 'markdown'
        releaseType = 'beta'
        addGameVersion '1.18.2'

        mainArtifact(jar){
            relations {
                requiredDependency 'titanium'
                requiredDependency 'patchouli'
                optionalDependency 'curios'
                optionalDependency 'jei'
            }
        }

        addArtifact sourcesJar
        addArtifact deobfJar
    }
}

/*task makeChangelog(type: GitChangelogTask) {
    file = new File("CHANGELOG.md")
    untaggedName = "Version ${project.version}"
    //fromCommit = "6a5a3df3665643ea181873312e3801db7c662686"
    fromRef = "refs/tags/2.3.0"
    toRef = "release-1.17"
    templateContent = file("changelog.mustache").getText("UTF-8")
}*/

tasks.withType(Jar).all {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}
